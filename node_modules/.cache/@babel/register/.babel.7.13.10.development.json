{
  "{\"assumptions\":{},\"sourceRoot\":\"/mnt/c/Users/satan/Documents/Proyecto/graphql/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/mnt/c/Users/satan/Documents/Proyecto/graphql\",\"filename\":\"/mnt/c/Users/satan/Documents/Proyecto/graphql/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/mnt/c/Users/satan/Documents/Proyecto/graphql\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/mnt/c/Users/satan/Documents/Proyecto/graphql/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/mnt/c/Users/satan/Documents/Proyecto/graphql",
      "filename": "/mnt/c/Users/satan/Documents/Proyecto/graphql/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/mnt/c/Users/satan/Documents/Proyecto/graphql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/mnt/c/Users/satan/Documents/Proyecto/graphql/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/mnt/c/Users/satan/Documents/Proyecto/graphql/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/mnt/c/Users/satan/Documents/Proyecto/graphql/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('express-graphql'),\n    graphqlHTTP = _require.graphqlHTTP;\n\nvar _require2 = require('graphql'),\n    buildSchema = _require2.buildSchema;\n\nvar _require3 = require('./data.json'),\n    courses = _require3.courses; // console.log(courses);\n\n\nvar schema = buildSchema(\"\\n  type Query {\\n    course(id: Int!): Course\\n    courses(topic: String): [Course]\\n\\n  }\\n\\n  type Mutation {\\n    updateCourseTopic(id: Int!, topic: String!): Course\\n  }\\n\\n  type Course {\\n    id: Int\\n    title: String\\n    author: String\\n    description: String\\n    topic: String\\n    url: String\\n  }\\n\"); //no esta con babel\n\nvar getCourse = function getCourse(args) {\n  return courses.filter(function (course) {\n    return course.id === args.id;\n  })[0];\n};\n\nvar getCourses = function getCourses(args) {\n  return args.topic ? courses.filter(function (course) {\n    return course.topic === args.topic;\n  }) : courses;\n};\n\nvar updateCourseTopic = function updateCourseTopic(_ref) {\n  var id = _ref.id,\n      topic = _ref.topic;\n  courses.map(function (course) {\n    if (course.id === id) {\n      course.topic = topic;\n      return course;\n    }\n  });\n  return courses.filter(function (course) {\n    return course.id === id;\n  })[0];\n}; // let getCourse = (args) => {\n//   let id = args.id;\n//   return courses.filter(course => {\n//       return course.id == id;\n//   })[0];\n// }\n// let getCourses = (args) => {\n//   if (args.topic) {\n//     let topic = args.topic;\n//     return courses.filter(course => course.topic === topic);\n//   } else {\n//     return courses;\n//   }\n// }\n// var root = { hello: () => 'Hello world!' };\n\n\nvar root = {\n  course: getCourse,\n  courses: getCourses,\n  updateCourseTopic: updateCourseTopic\n};\nvar app = express();\napp.use('/graphql', graphqlHTTP({\n  schema: schema,\n  rootValue: root,\n  graphiql: true\n}));\napp.listen(4000, function () {\n  return console.log('Now browse to localhost:4000/graphql');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiZ3JhcGhxbEhUVFAiLCJidWlsZFNjaGVtYSIsImNvdXJzZXMiLCJzY2hlbWEiLCJnZXRDb3Vyc2UiLCJhcmdzIiwiZmlsdGVyIiwiY291cnNlIiwiaWQiLCJnZXRDb3Vyc2VzIiwidG9waWMiLCJ1cGRhdGVDb3Vyc2VUb3BpYyIsIm1hcCIsInJvb3QiLCJhcHAiLCJ1c2UiLCJyb290VmFsdWUiLCJncmFwaGlxbCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7ZUFDc0JBLE9BQU8sQ0FBQyxpQkFBRCxDO0lBQXZCQyxXLFlBQUFBLFc7O2dCQUNnQkQsT0FBTyxDQUFDLFNBQUQsQztJQUF2QkUsVyxhQUFBQSxXOztnQkFFY0YsT0FBTyxDQUFDLGFBQUQsQztJQUFuQkcsTyxhQUFBQSxPLEVBQ1I7OztBQUVBLElBQUlDLE1BQU0sR0FBR0YsV0FBVyw2VEFBeEIsQyxDQXNCQTs7QUFDQSxJQUFJRyxTQUFTLEdBQUMsU0FBVkEsU0FBVSxDQUFBQyxJQUFJO0FBQUEsU0FBRUgsT0FBTyxDQUFDSSxNQUFSLENBQWUsVUFBQUMsTUFBTTtBQUFBLFdBQUVBLE1BQU0sQ0FBQ0MsRUFBUCxLQUFZSCxJQUFJLENBQUNHLEVBQW5CO0FBQUEsR0FBckIsRUFBNEMsQ0FBNUMsQ0FBRjtBQUFBLENBQWxCOztBQUNBLElBQUlDLFVBQVUsR0FBQyxTQUFYQSxVQUFXLENBQUFKLElBQUk7QUFBQSxTQUFHQSxJQUFJLENBQUNLLEtBQU4sR0FBZVIsT0FBTyxDQUFDSSxNQUFSLENBQWUsVUFBQUMsTUFBTTtBQUFBLFdBQUVBLE1BQU0sQ0FBQ0csS0FBUCxLQUFlTCxJQUFJLENBQUNLLEtBQXRCO0FBQUEsR0FBckIsQ0FBZixHQUFrRVIsT0FBcEU7QUFBQSxDQUFuQjs7QUFFQSxJQUFJUyxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLE9BQWlCO0FBQUEsTUFBZkgsRUFBZSxRQUFmQSxFQUFlO0FBQUEsTUFBWEUsS0FBVyxRQUFYQSxLQUFXO0FBQ3ZDUixFQUFBQSxPQUFPLENBQUNVLEdBQVIsQ0FBWSxVQUFBTCxNQUFNLEVBQUk7QUFDcEIsUUFBSUEsTUFBTSxDQUFDQyxFQUFQLEtBQWNBLEVBQWxCLEVBQXNCO0FBQ3BCRCxNQUFBQSxNQUFNLENBQUNHLEtBQVAsR0FBZUEsS0FBZjtBQUNBLGFBQU9ILE1BQVA7QUFDRDtBQUNGLEdBTEQ7QUFPQSxTQUFPTCxPQUFPLENBQUNJLE1BQVIsQ0FBZSxVQUFBQyxNQUFNO0FBQUEsV0FBSUEsTUFBTSxDQUFDQyxFQUFQLEtBQWNBLEVBQWxCO0FBQUEsR0FBckIsRUFBMkMsQ0FBM0MsQ0FBUDtBQUNELENBVEQsQyxDQVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EsSUFBSUssSUFBSSxHQUFHO0FBQ1ROLEVBQUFBLE1BQU0sRUFBRUgsU0FEQztBQUVURixFQUFBQSxPQUFPLEVBQUVPLFVBRkE7QUFHVEUsRUFBQUEsaUJBQWlCLEVBQUVBO0FBSFYsQ0FBWDtBQU1BLElBQUlHLEdBQUcsR0FBR2hCLE9BQU8sRUFBakI7QUFDQWdCLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFVBQVIsRUFBb0JmLFdBQVcsQ0FBQztBQUM5QkcsRUFBQUEsTUFBTSxFQUFFQSxNQURzQjtBQUU5QmEsRUFBQUEsU0FBUyxFQUFFSCxJQUZtQjtBQUc5QkksRUFBQUEsUUFBUSxFQUFFO0FBSG9CLENBQUQsQ0FBL0I7QUFLQUgsR0FBRyxDQUFDSSxNQUFKLENBQVcsSUFBWCxFQUFpQjtBQUFBLFNBQU1DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNDQUFaLENBQU47QUFBQSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvbW50L2MvVXNlcnMvc2F0YW4vRG9jdW1lbnRzL1Byb3llY3RvL2dyYXBocWwvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbnZhciB7IGdyYXBocWxIVFRQIH0gPSByZXF1aXJlKCdleHByZXNzLWdyYXBocWwnKTtcclxudmFyIHsgYnVpbGRTY2hlbWEgfSA9IHJlcXVpcmUoJ2dyYXBocWwnKTtcclxuXHJcbmNvbnN0IHsgY291cnNlcyB9ID0gcmVxdWlyZSgnLi9kYXRhLmpzb24nKVxyXG4vLyBjb25zb2xlLmxvZyhjb3Vyc2VzKTtcclxuXHJcbnZhciBzY2hlbWEgPSBidWlsZFNjaGVtYShgXHJcbiAgdHlwZSBRdWVyeSB7XHJcbiAgICBjb3Vyc2UoaWQ6IEludCEpOiBDb3Vyc2VcclxuICAgIGNvdXJzZXModG9waWM6IFN0cmluZyk6IFtDb3Vyc2VdXHJcblxyXG4gIH1cclxuXHJcbiAgdHlwZSBNdXRhdGlvbiB7XHJcbiAgICB1cGRhdGVDb3Vyc2VUb3BpYyhpZDogSW50ISwgdG9waWM6IFN0cmluZyEpOiBDb3Vyc2VcclxuICB9XHJcblxyXG4gIHR5cGUgQ291cnNlIHtcclxuICAgIGlkOiBJbnRcclxuICAgIHRpdGxlOiBTdHJpbmdcclxuICAgIGF1dGhvcjogU3RyaW5nXHJcbiAgICBkZXNjcmlwdGlvbjogU3RyaW5nXHJcbiAgICB0b3BpYzogU3RyaW5nXHJcbiAgICB1cmw6IFN0cmluZ1xyXG4gIH1cclxuYCk7XHJcblxyXG5cclxuLy9ubyBlc3RhIGNvbiBiYWJlbFxyXG5sZXQgZ2V0Q291cnNlPWFyZ3M9PmNvdXJzZXMuZmlsdGVyKGNvdXJzZT0+Y291cnNlLmlkPT09YXJncy5pZClbMF07XHJcbmxldCBnZXRDb3Vyc2VzPWFyZ3M9PihhcmdzLnRvcGljKSA/IGNvdXJzZXMuZmlsdGVyKGNvdXJzZT0+Y291cnNlLnRvcGljPT09YXJncy50b3BpYyk6IGNvdXJzZXM7XHJcblxyXG5sZXQgdXBkYXRlQ291cnNlVG9waWMgPSAoe2lkLCB0b3BpY30pID0+IHtcclxuICBjb3Vyc2VzLm1hcChjb3Vyc2UgPT4ge1xyXG4gICAgaWYgKGNvdXJzZS5pZCA9PT0gaWQpIHtcclxuICAgICAgY291cnNlLnRvcGljID0gdG9waWM7XHJcbiAgICAgIHJldHVybiBjb3Vyc2U7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiBjb3Vyc2VzLmZpbHRlcihjb3Vyc2UgPT4gY291cnNlLmlkID09PSBpZClbMF07XHJcbn1cclxuLy8gbGV0IGdldENvdXJzZSA9IChhcmdzKSA9PiB7XHJcbi8vICAgbGV0IGlkID0gYXJncy5pZDtcclxuLy8gICByZXR1cm4gY291cnNlcy5maWx0ZXIoY291cnNlID0+IHtcclxuLy8gICAgICAgcmV0dXJuIGNvdXJzZS5pZCA9PSBpZDtcclxuLy8gICB9KVswXTtcclxuLy8gfVxyXG5cclxuLy8gbGV0IGdldENvdXJzZXMgPSAoYXJncykgPT4ge1xyXG4vLyAgIGlmIChhcmdzLnRvcGljKSB7XHJcbi8vICAgICBsZXQgdG9waWMgPSBhcmdzLnRvcGljO1xyXG4vLyAgICAgcmV0dXJuIGNvdXJzZXMuZmlsdGVyKGNvdXJzZSA9PiBjb3Vyc2UudG9waWMgPT09IHRvcGljKTtcclxuLy8gICB9IGVsc2Uge1xyXG4vLyAgICAgcmV0dXJuIGNvdXJzZXM7XHJcbi8vICAgfVxyXG4vLyB9XHJcbi8vIHZhciByb290ID0geyBoZWxsbzogKCkgPT4gJ0hlbGxvIHdvcmxkIScgfTtcclxudmFyIHJvb3QgPSB7IFxyXG4gIGNvdXJzZTogZ2V0Q291cnNlLCBcclxuICBjb3Vyc2VzOiBnZXRDb3Vyc2VzLFxyXG4gIHVwZGF0ZUNvdXJzZVRvcGljOiB1cGRhdGVDb3Vyc2VUb3BpY1xyXG59O1xyXG4gXHJcbnZhciBhcHAgPSBleHByZXNzKCk7XHJcbmFwcC51c2UoJy9ncmFwaHFsJywgZ3JhcGhxbEhUVFAoe1xyXG4gIHNjaGVtYTogc2NoZW1hLFxyXG4gIHJvb3RWYWx1ZTogcm9vdCxcclxuICBncmFwaGlxbDogdHJ1ZSxcclxufSkpO1xyXG5hcHAubGlzdGVuKDQwMDAsICgpID0+IGNvbnNvbGUubG9nKCdOb3cgYnJvd3NlIHRvIGxvY2FsaG9zdDo0MDAwL2dyYXBocWwnKSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "graphqlHTTP",
        "buildSchema",
        "courses",
        "schema",
        "getCourse",
        "args",
        "filter",
        "course",
        "id",
        "getCourses",
        "topic",
        "updateCourseTopic",
        "map",
        "root",
        "app",
        "use",
        "rootValue",
        "graphiql",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;eACsBA,OAAO,CAAC,iBAAD,C;IAAvBC,W,YAAAA,W;;gBACgBD,OAAO,CAAC,SAAD,C;IAAvBE,W,aAAAA,W;;gBAEcF,OAAO,CAAC,aAAD,C;IAAnBG,O,aAAAA,O,EACR;;;AAEA,IAAIC,MAAM,GAAGF,WAAW,6TAAxB,C,CAsBA;;AACA,IAAIG,SAAS,GAAC,SAAVA,SAAU,CAAAC,IAAI;AAAA,SAAEH,OAAO,CAACI,MAAR,CAAe,UAAAC,MAAM;AAAA,WAAEA,MAAM,CAACC,EAAP,KAAYH,IAAI,CAACG,EAAnB;AAAA,GAArB,EAA4C,CAA5C,CAAF;AAAA,CAAlB;;AACA,IAAIC,UAAU,GAAC,SAAXA,UAAW,CAAAJ,IAAI;AAAA,SAAGA,IAAI,CAACK,KAAN,GAAeR,OAAO,CAACI,MAAR,CAAe,UAAAC,MAAM;AAAA,WAAEA,MAAM,CAACG,KAAP,KAAeL,IAAI,CAACK,KAAtB;AAAA,GAArB,CAAf,GAAkER,OAApE;AAAA,CAAnB;;AAEA,IAAIS,iBAAiB,GAAG,SAApBA,iBAAoB,OAAiB;AAAA,MAAfH,EAAe,QAAfA,EAAe;AAAA,MAAXE,KAAW,QAAXA,KAAW;AACvCR,EAAAA,OAAO,CAACU,GAAR,CAAY,UAAAL,MAAM,EAAI;AACpB,QAAIA,MAAM,CAACC,EAAP,KAAcA,EAAlB,EAAsB;AACpBD,MAAAA,MAAM,CAACG,KAAP,GAAeA,KAAf;AACA,aAAOH,MAAP;AACD;AACF,GALD;AAOA,SAAOL,OAAO,CAACI,MAAR,CAAe,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,EAAP,KAAcA,EAAlB;AAAA,GAArB,EAA2C,CAA3C,CAAP;AACD,CATD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIK,IAAI,GAAG;AACTN,EAAAA,MAAM,EAAEH,SADC;AAETF,EAAAA,OAAO,EAAEO,UAFA;AAGTE,EAAAA,iBAAiB,EAAEA;AAHV,CAAX;AAMA,IAAIG,GAAG,GAAGhB,OAAO,EAAjB;AACAgB,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBf,WAAW,CAAC;AAC9BG,EAAAA,MAAM,EAAEA,MADsB;AAE9Ba,EAAAA,SAAS,EAAEH,IAFmB;AAG9BI,EAAAA,QAAQ,EAAE;AAHoB,CAAD,CAA/B;AAKAH,GAAG,CAACI,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,sCAAZ,CAAN;AAAA,CAAjB",
      "sourceRoot": "/mnt/c/Users/satan/Documents/Proyecto/graphql/",
      "sourcesContent": [
        "var express = require('express');\r\nvar { graphqlHTTP } = require('express-graphql');\r\nvar { buildSchema } = require('graphql');\r\n\r\nconst { courses } = require('./data.json')\r\n// console.log(courses);\r\n\r\nvar schema = buildSchema(`\r\n  type Query {\r\n    course(id: Int!): Course\r\n    courses(topic: String): [Course]\r\n\r\n  }\r\n\r\n  type Mutation {\r\n    updateCourseTopic(id: Int!, topic: String!): Course\r\n  }\r\n\r\n  type Course {\r\n    id: Int\r\n    title: String\r\n    author: String\r\n    description: String\r\n    topic: String\r\n    url: String\r\n  }\r\n`);\r\n\r\n\r\n//no esta con babel\r\nlet getCourse=args=>courses.filter(course=>course.id===args.id)[0];\r\nlet getCourses=args=>(args.topic) ? courses.filter(course=>course.topic===args.topic): courses;\r\n\r\nlet updateCourseTopic = ({id, topic}) => {\r\n  courses.map(course => {\r\n    if (course.id === id) {\r\n      course.topic = topic;\r\n      return course;\r\n    }\r\n  });\r\n\r\n  return courses.filter(course => course.id === id)[0];\r\n}\r\n// let getCourse = (args) => {\r\n//   let id = args.id;\r\n//   return courses.filter(course => {\r\n//       return course.id == id;\r\n//   })[0];\r\n// }\r\n\r\n// let getCourses = (args) => {\r\n//   if (args.topic) {\r\n//     let topic = args.topic;\r\n//     return courses.filter(course => course.topic === topic);\r\n//   } else {\r\n//     return courses;\r\n//   }\r\n// }\r\n// var root = { hello: () => 'Hello world!' };\r\nvar root = { \r\n  course: getCourse, \r\n  courses: getCourses,\r\n  updateCourseTopic: updateCourseTopic\r\n};\r\n \r\nvar app = express();\r\napp.use('/graphql', graphqlHTTP({\r\n  schema: schema,\r\n  rootValue: root,\r\n  graphiql: true,\r\n}));\r\napp.listen(4000, () => console.log('Now browse to localhost:4000/graphql'));"
      ]
    },
    "sourceType": "script",
    "mtime": 1616034565004
  }
}